from telebot import TeleBot
from telebot import formatting
from telebot import types
import usercleaning as uc
import genbuttons as gb


bot = TeleBot('')
users = {}

class MyBot():
    def __init__(self):
        print("Started")
        self.wait_for_data = 0


    @bot.message_handler(commands=['start'])
    def start(message):
        bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç</b>', parse_mode='html')

    @bot.message_handler(commands=['console'])
    def console(message):
        print("lol")

    @bot.message_handler(commands=['init'])
    def initUC(message):
        if (users.get(message.chat.id, -1) != -1):
            bot.send_message(message.chat.id, f'üö´–û—à–∏–±–∫–∞! –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id} —É–∂–µ –µ—Å—Ç—å —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ',
                             parse_mode='html')
        else:
            temp_uc = uc.UserCleaning()
            users[message.chat.id] = temp_uc
            bot.send_message(message.chat.id, f'‚úÖ–°–æ–∑–¥–∞–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}', parse_mode='html')

    @bot.message_handler(commands=['delete'])
    def deleteUC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–û—à–∏–±–∫–∞! –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id} –µ—â–µ –Ω–µ—Ç —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞',
                             parse_mode='html')
        else:
            bot.wait_for_data = 5
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            bttn = types.KeyboardButton(text='–î–∞')
            bttn2 = types.KeyboardButton(text='–ù–µ—Ç')
            markup.add(bttn, bttn2)
            bot.send_message(message.chat.id,
                             f'‚è≥–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞" –≤–Ω–∏–∑—É',
                             parse_mode='html', reply_markup=markup)

    @bot.message_handler(commands=['progress'])
    def getProgressUC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id, f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.send_message(message.chat.id,
                             f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}:\n{users.get(message.chat.id).getProgress()}',
                             parse_mode='html')

    @bot.message_handler(commands=['done'])
    def getProgressUC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.send_message(message.chat.id,
                             f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–º–µ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}:\n{users.get(message.chat.id).getDone()}',
                             parse_mode='html')

    @bot.message_handler(commands=['make'])
    def makeDC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.wait_for_data = 1
            bot.send_message(message.chat.id,
                             f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:',
                             parse_mode='html')

    @bot.message_handler(commands=['remove'])
    def removeDC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.wait_for_data = 2
            bot.send_message(message.chat.id,
                             f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏:',
                             parse_mode='html')

    @bot.message_handler(commands=['removeDone'])
    def getProgressUC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            users.get(message.chat.id).removeDoneTasks()
            bot.send_message(message.chat.id,
                             f'–£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
                             parse_mode='html')

    @bot.message_handler(commands=['clear'])
    def clearUC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.wait_for_data = 6
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            bttn = types.KeyboardButton(text='–î–∞')
            bttn2 = types.KeyboardButton(text='–ù–µ—Ç')
            markup.add(bttn, bttn2)
            bot.send_message(message.chat.id,
                             f'‚è≥–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É –∑–∞–¥–∞—á, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞" –≤–Ω–∏–∑—É',
                             parse_mode='html', reply_markup=markup)

    @bot.message_handler(commands=['mark'])
    def markDC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.wait_for_data = 3
            bot.send_message(message.chat.id,
                             f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏:',
                             parse_mode='html')

    @bot.message_handler(commands=['unmark'])
    def unmarkDC(message):
        if (users.get(message.chat.id, -1) == -1):
            bot.send_message(message.chat.id,
                             f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                             parse_mode='html')
        else:
            bot.wait_for_data = 4
            bot.send_message(message.chat.id,
                             f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏:',
                             parse_mode='html')


    @bot.message_handler(commands=['button'])
    def button(message):
        gen = gb.GenButtons()
        markup = gen.generate()
        bot.send_message(message.chat.id,
                         "a",
                         reply_markup=markup)

    @bot.message_handler(content_types=["text"])
    def allHandlers_add(message):
        # MAKEDC
        if (bot.wait_for_data == 1):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                users.get(message.chat.id).makeTask(message.text)
                bot.send_message(message.chat.id,
                                 f'‚úÖ–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ {message.text} –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {users.get(message.chat.id).getLastTask()} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            bot.wait_for_data = 0
        # REMOVEDC
        if (bot.wait_for_data == 2):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                del_name = users.get(message.chat.id).removeTask(int(message.text))
                bot.send_message(message.chat.id,
                                 f'‚úÖ–£–¥–∞–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞ {del_name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            bot.wait_for_data = 0
        # MARKDC
        if (bot.wait_for_data == 3):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                temp_name = users.get(message.chat.id).markTask(int(message.text))
                bot.send_message(message.chat.id,
                                 f'‚úÖ–û—Ç–º–µ—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞ {temp_name} –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {message.text} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            bot.wait_for_data = 0
        # UNMARKDC
        if (bot.wait_for_data == 4):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                temp_name = users.get(message.chat.id).unmarkTask(int(message.text))
                bot.send_message(message.chat.id,
                                 f'‚úÖ–£–±—Ä–∞–Ω–∞ –º–µ—Ç–∫–∞ —Å –∑–∞–¥–∞—á–∏ {temp_name} –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {message.text} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            bot.wait_for_data = 0
        # CONFIRM DELETE UC
        if (bot.wait_for_data == 5):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                if (message.text == "–î–∞"):
                    users.pop(message.chat.id)
                    gen = gb.GenButtons()
                    markup = gen.generate()
                    bot.send_message(message.chat.id, f'‚úÖ–£–¥–∞–ª–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}', parse_mode='html', reply_markup=markup)
                else:
                    gen = gb.GenButtons()
                    markup = gen.generate()
                    bot.send_message(message.chat.id,
                                     "üö´–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏",
                                     reply_markup=markup)
            bot.wait_for_data = 0
        if (bot.wait_for_data == 6):
            if (users.get(message.chat.id, -1) == -1):
                bot.send_message(message.chat.id,
                                 f'üö´–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}',
                                 parse_mode='html')
            else:
                if (message.text == "–î–∞"):
                    users.get(message.chat.id).clearTasks()
                    gen = gb.GenButtons()
                    markup = gen.generate()
                    bot.send_message(message.chat.id, f'‚úÖ–û—á–∏—â–µ–Ω—ã –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä {message.chat.id}', parse_mode='html', reply_markup=markup)
                else:
                    gen = gb.GenButtons()
                    markup = gen.generate()
                    bot.send_message(message.chat.id,
                                     "üö´–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏",
                                     reply_markup=markup)
            bot.wait_for_data = 0
			
objBot = MyBot()

timer = 100
check = 0
while True:
    if timer == 1 or check == 0:
        try:
            bot.polling(none_stop=True, skip_pending=True)
        except BaseException:
            check = 1
    timer -= 1
    if timer <= 1:
        timer = 100
        check = 0